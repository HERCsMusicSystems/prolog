HERCs Prolog Syntax

<command> ::=	<list> | <atom> <list>
<program> ::=	{import ( <atom> | <text> ) }
		program <atom> [ #machine := <text> ] ( #auto | <atoms> )
		{ (
			<machine> |
			<clause> | auto := <clause> |
			<preprocessor> |
			protect <atoms> |
			private <atoms>
		) }
		end [ := <clause> ] .
<atom>		 ::=	( "_" | <letter> ) { ( "_" | <letter> | <cipher> ) }
<atoms>		 ::=	"[" { <atom> } "]"
<positive>	 ::=	<cipher> { <cipher> }
<number>	 ::=	[ "-" ] <positive>
<float>		 ::=	<number> . <positive>
<text>		 ::=	"\"" { <anything> } "\""
<variable>	 ::=	"*" { ( "_" | <letter> | <cipher> ) }
<element>	 ::=	<atom> | <number> | <float> | <text> |
			/ | fail | <list> | <variable>
<tail>		 ::=	{ <element> } [ : <element> ] "]"
<list>		 ::=	"[" <element> <tail>
<clause>	 ::=	"[[" <atom> <tail> <tail>
<machine>	 ::=	#machine <atom> := <text>
<preprocessor>	 ::=	preprocessor := ( <atom> | "[" "]" )

Searching rules:

There are four types: batch files, text modules, binary modules and embedded modules.

If no name is specified then studio is loaded and [command] started.
If name has .prc extension then the module is loaded and the tail instructions are performed.
Otherwise the system bootstraps the name: the system assumes the name specifies a batch file, it tries to load it skipping the first shebang line.
If the file was not found then the .prc extension is added at the end of the name, the module is loaded and the tail instructions are performed.

Modules are searched in the following order:
1. The system tries to load and embedded module.
2. The system tries to load a text module from present working directory.
3. The system tries to load a text module from locations specified by search_directories array.
4. The system tries to load a binary module.

Batch files are searched in the following order:
1. The system tries to load a batch file from present working directory.
2. The system tries to load a batch file from locations specified by search_directories array.
