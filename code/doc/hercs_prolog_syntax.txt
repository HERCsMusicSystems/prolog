HERCs Prolog Syntax

<command> ::=	<list> | <atom> <list>
<program> ::=	{import ( <atom> | <text> ) }
		program <atom> [ #machine := <text> ] ( #auto | <atoms> )
		{ (
			<machine> |
			<clause> | auto := <clause> |
			<preprocessor> |
			protect <atoms> |
			private <atoms>
		) }
		end [ := <clause> ] .
<atom>		 ::=	( "_" | <letter> ) { ( "_" | <letter> | <cipher> ) }
<atoms>		 ::=	"[" { <atom> } "]"
<positive>	 ::=	<cipher> { <cipher> }
<number>	 ::=	[ "-" ] <positive>
<float>		 ::=	<number> . <positive>
<text>		 ::=	"\"" { <anything> } "\""
<variable>	 ::=	"*" { ( "_" | <letter> | <cipher> ) }
<element>	 ::=	<atom> | <number> | <float> | <text> |
			/ | fail | <list> | <variable>
<tail>		 ::=	{ <element> } [ : <element> ] "]"
<list>		 ::=	"[" <element> <tail>
<clause>	 ::=	"[[" <atom> <tail> <tail>
<machine>	 ::=	#machine <atom> := <text>
<preprocessor>	 ::=	preprocessor := ( <atom> | "[" "]" )

Searching rules:

There are four types: batch files, text modules, binary modules and embedded modules.
If no name is specified then studio is loaded and [command] started.
If name has .prc extension then loads studio.prc first, then bootstraps the name.
Bootstrapping means it is first tries to load a batch file and if it can not be found, then imports module.
If name has no .prc extension the it is simply loaded and the tail instructions are performed.

The file is searched in the following order:
1. Embedded modules are searched.
2. Files from present working directory are searched.
3. Files from locations specified by search_directories array.
4. Binary files are searched.

